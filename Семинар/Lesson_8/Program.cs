/* Составить частотный словарь элементов двумерного массива

Частотный словарь содержит информацию о том, сколько раз встречается элемент входных данных.

Пример: Есть набор данных

{ 1, 9, 9, 0, 2, 8, 0, 9 }

частотный массив может быть представлен так:

0 встречается 2 раза
1 встречается 1 раз
2 встречается 1 раз
8 встречается 1 раз
9 встречается 3 раза

Если набор данных - таблица

1, 2, 3
4, 6, 1
2, 1, 6

на выходе ожидаем получить

1 встречается 3 раза
2 встречается 2 раз
3 встречается 1 раз
4 встречается 1 раз
6 встречается 2 раза

Пример частотного массива для текстовых данных: Входные данные:

Частотный анализ – это один из методов криптоанализа, основывающийся на предположении о существовании
нетривиального статистического распределения отдельных символов и их последовательностей
как в открытом тексте, так и шифрованном тексте, которое с точностью до замены символов будет 
сохраняться в процессе шифрования и дешифрования.

Частотный анализ может выглядеть так

Символ пробел/space встречается 41 раз. Частота 12.28%
Символ о встречается 38 раз.  Частота 11.38%
Символ и встречается 26 раз.  Частота 7.78%
Символ т встречается 25 раз.  Частота 7.49%
Символ е встречается 23 раза. Частота 6.89%
Символ с встречается 21 раз.  Частота 6.29%
Символ н встречается 20 раз.  Частота 5.99%
Символ а встречается 20 раз.  Частота 5.99%
Символ в встречается 16 раз.  Частота 4.79%
Символ р встречается 12 раз.  Частота 3.59%
Символ л встречается 10 раз.  Частота 2.99%
Символ к встречается 9 раз.   Частота 2.69%
Символ д встречается 9 раз.   Частота 2.69%
Символ п встречается 6 раз.   Частота 1.80%
Символ я встречается 6 раз.   Частота 1.80%
Символ м встречается 6 раз.   Частота 1.80%
Символ ь встречается 5 раз.   Частота 1.50%
Символ ы встречается 5 раз.   Частота 1.50%
Символ з встречается 4 раза.  Частота 1.20%
Символ х встречается 3 раза.  Частота 0.90%
Символ ш встречается 3 раза.  Частота 0.90%
Символ ф встречается 3 раза.  Частота 0.90%
Символ ч встречается 3 раза.  Частота 0.90%
Символ й встречается 3 раза.  Частота 0.90%
Символ , встречается 3 раза.  Частота 0.90%
Символ щ встречается 2 раза.  Частота 0.60%
Символ ю встречается 2 раза.  Частота 0.60%
Символ у встречается 2 раза.  Частота 0.60%
Символ г встречается 2 раза.  Частота 0.60%
Символ ж встречается 1 раз.   Частота 0.30%
Символ э встречается 1 раз.   Частота 0.30%
Символ – встречается 1 раз.   Частота 0.30%
Символ б встречается 1 раз.   Частота 0.30%
Символ ц встречается 1 раз.   Частота 0.30%
Символ . встречается 1 раз.   Частота 0.30% */


// Первое решение
// int[] array = new int[] { 1, 9, 9, 0, 2, 8, 0, 9 };

// int[] newarray = new int[array.Length];
// for (int i = 0; i < array.Length; i++)
// {
//     int number = array[i];
//     int count = 0;
//     for (int j = 0; j < array.Length; j++)
//     {
//         if (array[j] == number)
//         {
//             count += 1;

//         }
//     }
//     newarray[i] = count;
// }

// string[,] matrix = new string[array.Length, 1];

// for (int i = 0; i < matrix.GetLength(0); i++)
// {
//     for (int j = 0; j < matrix.GetLength(1); j = j + 1)
//     {
//         matrix[i, j] = $"{array[i]} встречается {newarray[i]} раз.";
//     }

// }

// for (int i = 0; i < matrix.GetLength(0) - 1; i++)
// {
//     for (int j = 0; j < matrix.GetLength(1); j = j + 1)
//     {
//         if (matrix[i, j] != matrix[i + 1, j] )
//         {
//             Console.WriteLine(matrix[i, j]);
//         }
//         else continue;
//     }

// }

// Console.WriteLine(string.Join(", ", newarray));
// Решение Павла
// int[] array = new int[] { 1, 9, 9, 0, 2, 8, 0, 9 };

// for (int i = 0; i < array.Length; i++)
// {
//     for (int j = i + 1; j < array.Length; j++)
//     {
//         if (array[i] > array[j])
//         {
//             int temp = array[i];
//             array[i] = array[j];
//             array[j] = temp;
//         }
//     }
// }
// Console.WriteLine(String.Join(" ", array));

// int[] newarray = new int[array.Length];
// for (int i = 0; i < array.Length; i++)
// {
//     int number = array[i];
//     int count = 0;
//     for (int j = 0; j < array.Length; j++)
//     {
//         if (array[j] == number)
//         {
//             count += 1;

//         }
//     }
//     newarray[i] = count;
// }
// Console.WriteLine(String.Join(" ", newarray));

// string[,] matrix = new string[array.Length, 1];

// for (int i = 0; i < matrix.GetLength(0); i++)
// {
//     for (int j = 0; j < matrix.GetLength(1); j++)
//     {
//         matrix[i, j] = $"{array[i]} встречается {newarray[i]} раз.";
//     }
// }

// for (int i = 1; i < matrix.GetLength(0) - 1; i++)
// {
//     for (int j = 0; j < matrix.GetLength(1); j++)
//     {
//         if (matrix[i, j] != matrix[i - 1, j])
//         {
//             Console.WriteLine(matrix[i, j]);
//         }
//         else continue;
//     }
// }


// Второе решение
// int[,] table = new int[3, 3] { 1, 2, 3, 4, 6, 1, 2, 1, 6};

// int[] newarray = new int[array.Length];
// for (int i = 0; i < array.Length; i++)
// {
//     int number = table[i, j];
//     int count = 0;
//     for (int i = 0; i < table.GetLength(0); i++)
//     {
//         for (int j = 0; j < table.GetLength(1); j++)
//         {
//             if (table[i, j] == number)
//             {
//                 count += 1;

//             }
//         }
//     }
        
//     newarray[i] = count;
// }

// string[,] matrix = new string[array.Length, 1];

// for (int i = 0; i < matrix.GetLength(0); i++)
// {
//     for (int j = 0; j < matrix.GetLength(1); j = j + 1)
//     {
//         matrix[i, j] = $"{table[i, j]} встречается {newarray[i]} раз.";
//     }

// }

// for (int i = 0; i < matrix.GetLength(0) - 1; i++)
// {
//     for (int j = 0; j < matrix.GetLength(1); j = j + 1)
//     {
//         if (matrix[i, j] != matrix[i + 1, j] )
//         {
//             Console.WriteLine(matrix[i, j]);
//         }
//         else continue;
//     }

// }

// Console.WriteLine(string.Join(", ", newarray));

